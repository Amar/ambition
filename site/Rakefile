require 'rubygems'
require 'redcloth'
require 'rake'
require 'rake/contrib/sshpublisher'

    StaticFiles = %w( png gif jpeg jpg css js )
LiveDirectories = %w( adapters textile static )

task :default => [ :clean, :build ]

desc "Clean generated files"
task :clean do
  FileUtils.rm_rf 'live'
end

def compile(file)
  layout = File.read('src/layout.textile')
  layout.sub('%CONTENT%', compile_without_layout(file)).gsub('%PAGE%', File.basename(file).split('.').first)
end

def compile_without_layout(file)
  textile = File.read(file).
    gsub(/%INCLUDE (.+)%/) { |match| File.read("src/#{$1}") }.
    gsub('<ruby>', '<pre class="ruby">').gsub('</ruby>', '</pre>')
  RedCloth.new(textile).to_html
end

desc "Build live HTML files"
task :build do
  LiveDirectories.each { |dir| FileUtils.mkdir_p "live/#{dir}" }
  Dir['src/**/*.textile'].each do |file|
    next if File.basename(file) == 'layout.textile'

    file_name = file.sub('src/', '').sub('.textile', '.html')
    live_file = "live/#{file_name}"

    unless uptodate?(live_file, file) && uptodate?(live_file, "src/layout.textile")
      File.open(live_file, 'w') { |f| f.puts(compile(file)); f.flush }
      puts "created #{live_file}"
      cp file, 'live/textile/' + file.split('/').last.sub('.textile', '.txt')
    end
  end

  static_files = "{#{StaticFiles.join(',')}}"
  Dir["src/**/*.#{static_files}"].each do |file|
    file = file.sub('src/','')
    src, live = "src/#{file}", "live/#{file}"
    unless uptodate? live, src
      cp src, live 
      puts "copied #{file}"
    end
  end
end

desc "Publish the documentation"
task :publish => [ :build ] do
Rake::SshDirPublisher.new(
  "defunkt@rubyforge.org",
  "/var/www/gforge-projects/ambition/",
  "live" ).upload
end
